{"version":3,"sources":["components/PokemonCard.js","components/Sidebar.js","components/Navbar.js","pages/PokemonList.js","store/reducer.js","store/store.js","pages/MyPokemonList.js","components/Header.js","pages/PokemonDetail.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonCard","props","pokemon","className","src","image","alt","name","width","Sidebar","title","path","icon","cName","Navbar","useState","sidebar","setSidebar","showSidebar","to","onClick","map","item","index","LOAD_POKEMON","gql","PokemonList","useQuery","loading","error","data","Spinner","animation","role","pokemons","results","Reducer","state","action","type","some","nickname","payload","alert","newState","localStorage","setItem","JSON","stringify","newArr","filter","initialState","getItem","parse","Context","createContext","Store","children","useReducer","dispatch","Provider","value","MyPokemonList","useContext","console","log","Card","style","Img","variant","url","height","Body","Title","Text","weight","abilities","ability","moves","move","types","Button","Header","backButton","history","useHistory","goBack","GET_POKEMON","PokemonDetail","useParams","variables","ListGroup","Item","active","ablt","mvs","typ","Math","round","random","prompt","App","client","ApolloClient","uri","cache","InMemoryCache","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47da0775.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PokemonCard = (props) => {\r\n  const pokemon = props.pokemon;\r\n\r\n  return (\r\n    <div className=\"rounded-md my-2 p-4 shadow-md\">\r\n      <img src={pokemon.image} alt={pokemon.name} width=\"100%\"></img>\r\n      <h4 className=\"capitalize\">{pokemon.name}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nPokemonCard.propTypes = {\r\n  pokemon: PropTypes.object,\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as CgIcons from \"react-icons/cg\";\n\nexport const Sidebar = [\n    {\n        title: 'Pokemon List',\n        path: '/',\n        icon: <FaIcons.FaRegListAlt/>,\n        cName: 'nav-text'\n    },\n    {\n        title: 'My Pokemon List',\n        path: '/my-pokemon',\n        icon: <CgIcons.CgPokemon/>,\n        cName: 'nav-text'\n    },\n]\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport {Sidebar} from \"./Sidebar\";\nimport \"./Component.css\"; \n\nfunction Navbar(props){\n    const [sidebar, setSidebar] = useState(false);\n    const showSidebar = () => setSidebar(!sidebar);\n    const title = props.title;\n\n    return  (\n        <>\n            <div className=\"navbar\">\n                <Link to=\"#\" className=\"menu-bars\">\n                    <FaIcons.FaBars onClick={showSidebar}/>\n                </Link>\n                <h1 className=\"font-bold text-white  text-lg capitalize\">{title}</h1>\n            </div>\n            <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n                <ul className=\"nav-menu-items\">\n                    <li className=\"navbar-toggle\">\n                        <Link to=\"#\" className=\"menu-bars\">\n                            <AiIcons.AiOutlineClose  onClick={showSidebar}/>\n                        </Link>\n                    </li>\n                    {Sidebar.map((item, index)=>{\n                        return(\n                            <li key={index} className={item.cName}>\n                                <Link to={item.path}>\n                                    {item.icon}\n                                    <span>{item.title}</span>\n                                </Link>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </nav>\n        </>\n    );\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string,\n  };\n  \nexport default Navbar;","import React from \"react\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PokemonCard from \"../components/PokemonCard\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst LOAD_POKEMON = gql`\r\n  query LoadPokemon {\r\n    pokemons {\r\n      results {\r\n        id\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PokemonList = () => {\r\n  const { loading, error, data } = useQuery(LOAD_POKEMON);\r\n\r\n  if (loading) \r\n  return <Spinner animation=\"border\" role=\"status\">\r\n    <span className=\"sr-only\">Loading...</span>\r\n  </Spinner>;\r\n  if (error) return <h1>Error</h1>;\r\n\r\n  return (\r\n    <div>\r\n      <Navbar title=\"Pokemon List\"></Navbar>\r\n      <div className=\"container mx-auto p-4 flex flex-col\">\r\n        {data.pokemons.results.map((pokemon, index) => (\r\n          <Link to={`/pokemon/${pokemon.name}`} key={index}>\r\n            <PokemonCard pokemon={pokemon} />\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","const Reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add_pokemon\": {\r\n      const exist = state.pokemons.some(\r\n        (pokemon) => pokemon.nickname === action.payload.nickname\r\n      );\r\n      if (!exist) {\r\n        const newState = {\r\n          ...state,\r\n          pokemons: [...state.pokemons, action.payload],\r\n        };\r\n        localStorage.setItem(\"my-pokemon\", JSON.stringify(newState));\r\n        return newState;\r\n      } else {\r\n        alert(\"Nickname exist\");\r\n        return state;\r\n      }\r\n    }\r\n    case \"remove_pokemon\": {\r\n      const newArr = state.pokemons.filter(\r\n        (pokemon) => pokemon.nickname !== action.payload\r\n      );\r\n      const newState = {\r\n        ...state,\r\n        pokemons: newArr,\r\n      };\r\n      localStorage.setItem(\"my-pokemon\", JSON.stringify(newState));\r\n      return newState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Reducer;\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport Reducer from \"./reducer\";\r\n\r\nconst initialState = {\r\n  pokemons: localStorage.getItem(\"my-pokemon\")\r\n    ? JSON.parse(localStorage.getItem(\"my-pokemon\")).pokemons\r\n    : [],\r\n};\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Store = ({ children }) => {\r\n  const [state, dispatch] = useReducer(Reducer, initialState);\r\n  return (\r\n    <Context.Provider value={[state, dispatch]}>{children}</Context.Provider>\r\n  );\r\n};\r\n\r\nexport const Context = createContext(initialState);\r\nexport default Store;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../store/store\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MyPokemonList = () => {\r\n  const [state, dispatch] = useContext(Context);\r\n  console.log(state.pokemons);\r\n  return (\r\n    <>\r\n      <Navbar title=\"My Pokemon List\"></Navbar>\r\n      {state.pokemons.map((pokemon, index) => {\r\n        return (\r\n          <div className=\"flex flex-row\" key={index}>\r\n            <Card className=\"position-static\" style={{ width: '45%'}}>\r\n              <Card.Img variant=\"top\" src={pokemon.pokemon.image.url} alt=\"{pokemon.nickname}\" width=\"100px\" height=\"180px\"/>\r\n              <Card.Body>\r\n                <Card.Title>{pokemon.nickname}</Card.Title>\r\n                <Card.Text>Pokemon name {pokemon.pokemon.name}. \r\n                They have {pokemon.pokemon.weight} lbs and {pokemon.pokemon.height} inc. \r\n                One of their ability is {pokemon.pokemon.abilities[0].ability.name}.\r\n                One of their move is {pokemon.pokemon.moves[0].move.name} and\r\n                one of their type is {pokemon.pokemon.types[0].type.name}.</Card.Text>\r\n                <Link to={`/pokemon/${pokemon.pokemon.name}`} key={index}>\r\n                  <Button className=\"mr-2\" variant=\"primary\">Detail</Button>\r\n                </Link>\r\n                <Button className=\"mr-2\" variant=\"danger\"\r\n                onClick={() =>\r\n                  dispatch({ type: \"remove_pokemon\", payload: pokemon.nickname })\r\n                }>Remove</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPokemonList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport \"./Component.css\"; \r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  const title = props.title;\r\n  const backButton = props.backButton;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      {backButton ? (\r\n        <Button onClick={() => history.goBack()}><IoIcons.IoMdArrowRoundBack/></Button>\r\n      ) : null}\r\n      <h1 className=\"font-bold text-white  text-lg capitalize\">{title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  backButton: PropTypes.bool,\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { Context } from \"../store/store\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst GET_POKEMON = gql`\r\n  query pokemon($name: String!) {\r\n    pokemon(name: $name) {\r\n      id\r\n      name\r\n      image: sprites{\r\n        url: front_default\r\n      }\r\n      weight\r\n      height\r\n      abilities{\r\n        ability{\r\n          name\r\n        }\r\n      }\r\n      moves{\r\n        move{\r\n          name\r\n        }\r\n      }\r\n      types{\r\n        type{\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst PokemonDetail = () => {\r\n  const [state, dispatch] = useContext(Context);\r\n  const { name } = useParams();\r\n  const { loading, error, data } = useQuery(GET_POKEMON, {\r\n    variables: { name },\r\n  });\r\n\r\n  if (loading) \r\n  return <Spinner animation=\"border\" role=\"status\">\r\n    <span className=\"sr-only\">Loading...</span>\r\n  </Spinner>;\r\n  else if (error) return <h1>Error</h1>;\r\n  else {\r\n    return (\r\n      <>\r\n        <Header title={\"Detail \" + data.pokemon.name} backButton={true} /> \r\n        <p>Weight : {data.pokemon.weight} lbs</p>\r\n        <p>Height : {data.pokemon.height} inc</p>\r\n        <ListGroup>\r\n        <ListGroup.Item active> Abilities</ListGroup.Item>\r\n        {data.pokemon.abilities.map((ability, index) => {\r\n          const ablt = ability.ability;\r\n          return <ListGroup.Item key={index}>{ablt.name}</ListGroup.Item >;\r\n        })}\r\n        </ListGroup>\r\n        <br></br>\r\n        <ListGroup>\r\n        <ListGroup.Item active> Move</ListGroup.Item>\r\n        {data.pokemon.moves.map((move, index) => {\r\n          const mvs = move.move;\r\n          return <ListGroup.Item key={index}>{mvs.name}</ListGroup.Item>;\r\n        })}\r\n        </ListGroup>\r\n        <br></br>\r\n        <ListGroup>\r\n        <ListGroup.Item active> Type</ListGroup.Item>\r\n        {data.pokemon.types.map((type, index) => {\r\n          const typ = type.type;\r\n          return <ListGroup.Item key={index}>{typ.name}</ListGroup.Item>;\r\n        })}\r\n        </ListGroup><br></br>\r\n        <Button variant=\"info\"\r\n          onClick={() => {\r\n            const prob = Math.round(Math.random());\r\n            if (prob) {\r\n              const nickname = prompt(\"Enter nickname\", \"\");\r\n              dispatch({\r\n                type: \"add_pokemon\",\r\n                payload: {\r\n                  nickname,\r\n                  pokemon: data.pokemon,\r\n                },\r\n              });\r\n            } else {\r\n              alert(\"You Lose Your Pokemon\");\r\n            }\r\n          }}\r\n        >\r\n          Catch Pokemon\r\n        </Button>{' '}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default PokemonDetail;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport PokemonList from \"./pages/PokemonList\";\r\nimport MyPokemonList from \"./pages/MyPokemonList\";\r\nimport PokemonDetail from \"./pages/PokemonDetail\";\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\nimport Store from \"./store/store\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nconst App = () => {\r\n  const client = new ApolloClient({\r\n    uri: \"https://graphql-pokeapi.vercel.app/api/graphql\",\r\n    cache: new InMemoryCache(),\r\n  });\r\n\r\n  return (\r\n    <Store>\r\n      <ApolloProvider client={client}>\r\n        <Router>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <PokemonList />\r\n              </Route>\r\n              <Route path=\"/my-pokemon\">\r\n                <MyPokemonList />\r\n              </Route>\r\n              <Route path=\"/pokemon/:name\">\r\n                <PokemonDetail />\r\n              </Route>\r\n            </Switch>\r\n        </Router>\r\n      </ApolloProvider>\r\n    </Store>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}